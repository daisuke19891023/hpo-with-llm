# Clean Interfaces Environment Configuration
# Copy this file to .env and adjust the values as needed

# ============================================================================
# Logging Configuration
# ============================================================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Default: INFO
LOG_LEVEL=INFO

# Log output format: json, console, plain
# - json: Structured JSON output (recommended for production)
# - console: Colored console output (recommended for development)
# - plain: Simple key-value output
# Default: json
LOG_FORMAT=json

# Path to log file for local file logging (optional)
# If not set, logs will only be written to stdout
# Example: /var/log/clean-interfaces/app.log
LOG_FILE_PATH=

# ============================================================================
# OpenTelemetry Configuration
# ============================================================================

# OpenTelemetry logs export mode: file, otlp, both
# - file: Export logs to local file only
# - otlp: Export logs to OpenTelemetry collector
# - both: Export to both file and OTLP
# Default: file
OTEL_LOGS_EXPORT_MODE=file

# OpenTelemetry collector endpoint
# Default: http://localhost:4317
OTEL_ENDPOINT=http://localhost:4317

# Service name for OpenTelemetry
# This identifies your application in the observability platform
# Default: python-app
OTEL_SERVICE_NAME=clean-interfaces

# OpenTelemetry export timeout in milliseconds
# Default: 30000 (30 seconds)
OTEL_EXPORT_TIMEOUT=30000

# ============================================================================
# Interface Configuration
# ============================================================================

# Type of interface to use: cli, restapi
# - cli: Command Line Interface
# - restapi: REST API with FastAPI
# Default: cli
INTERFACE_TYPE=cli

# ============================================================================
# Additional Notes
# ============================================================================
# 
# 1. Environment variables take precedence over values in this file
# 2. You can also specify a custom .env file using the --dotenv option:
#    python -m clean_interfaces.main --dotenv prod.env
# 
# 3. For production deployments, consider:
#    - Setting LOG_LEVEL to ERROR or WARNING
#    - Using LOG_FORMAT=json for structured logging
#    - Configuring OTEL_* settings for observability
#    - Setting appropriate LOG_FILE_PATH for persistent logs
#
# 4. For development:
#    - Use LOG_LEVEL=DEBUG for detailed output
#    - Use LOG_FORMAT=console for readable output
#    - Keep OTEL_LOGS_EXPORT_MODE=file unless testing OTLP